/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    EscrowFactory: {
      address: "0x0c94402eb69d9DfD14d3cC509237f60f9e04fC16",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "limitOrderProtocol",
              type: "address",
            },
            {
              internalType: "contract IERC20",
              name: "feeToken",
              type: "address",
            },
            {
              internalType: "contract IERC20",
              name: "accessToken",
              type: "address",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "rescueDelaySrc",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "rescueDelayDst",
              type: "uint32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "AccessDenied",
          type: "error",
        },
        {
          inputs: [],
          name: "ERC1167FailedCreateClone",
          type: "error",
        },
        {
          inputs: [],
          name: "InsufficientEscrowBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidCreationTime",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidPartialFill",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidProof",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidSecretsAmount",
          type: "error",
        },
        {
          inputs: [],
          name: "MathOverflowedMulDiv",
          type: "error",
        },
        {
          inputs: [],
          name: "NotEnoughCredit",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyFeeBankAccess",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyLimitOrderProtocol",
          type: "error",
        },
        {
          inputs: [],
          name: "ResolverCanNotFillOrder",
          type: "error",
        },
        {
          inputs: [],
          name: "SafeTransferFromFailed",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "escrow",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "hashlock",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "Address",
              name: "taker",
              type: "uint256",
            },
          ],
          name: "DstEscrowCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "orderHash",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "hashlock",
                  type: "bytes32",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "taker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "token",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "safetyDeposit",
                  type: "uint256",
                },
                {
                  internalType: "Timelocks",
                  name: "timelocks",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct IBaseEscrow.Immutables",
              name: "srcImmutables",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "token",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "safetyDeposit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "chainId",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct IEscrowFactory.DstImmutablesComplement",
              name: "dstImmutablesComplement",
              type: "tuple",
            },
          ],
          name: "SrcEscrowCreated",
          type: "event",
        },
        {
          inputs: [],
          name: "ESCROW_DST_IMPLEMENTATION",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "ESCROW_SRC_IMPLEMENTATION",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FEE_BANK",
          outputs: [
            {
              internalType: "contract IFeeBank",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "orderHash",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "hashlock",
                  type: "bytes32",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "taker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "token",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "safetyDeposit",
                  type: "uint256",
                },
                {
                  internalType: "Timelocks",
                  name: "timelocks",
                  type: "uint256",
                },
              ],
              internalType: "struct IBaseEscrow.Immutables",
              name: "immutables",
              type: "tuple",
            },
          ],
          name: "addressOfEscrowDst",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "orderHash",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "hashlock",
                  type: "bytes32",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "taker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "token",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "safetyDeposit",
                  type: "uint256",
                },
                {
                  internalType: "Timelocks",
                  name: "timelocks",
                  type: "uint256",
                },
              ],
              internalType: "struct IBaseEscrow.Immutables",
              name: "immutables",
              type: "tuple",
            },
          ],
          name: "addressOfEscrowSrc",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "availableCredit",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "orderHash",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "hashlock",
                  type: "bytes32",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "taker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "token",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "safetyDeposit",
                  type: "uint256",
                },
                {
                  internalType: "Timelocks",
                  name: "timelocks",
                  type: "uint256",
                },
              ],
              internalType: "struct IBaseEscrow.Immutables",
              name: "dstImmutables",
              type: "tuple",
            },
            {
              internalType: "uint256",
              name: "srcCancellationTimestamp",
              type: "uint256",
            },
          ],
          name: "createDstEscrow",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "decreaseAvailableCredit",
          outputs: [
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "takingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "extraData",
              type: "bytes",
            },
          ],
          name: "getMakingAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "makingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "extraData",
              type: "bytes",
            },
          ],
          name: "getTakingAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "increaseAvailableCredit",
          outputs: [
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "key",
              type: "bytes32",
            },
          ],
          name: "lastValidated",
          outputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "leaf",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "extension",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "taker",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "makingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "takingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "remainingMakingAmount",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "extraData",
              type: "bytes",
            },
          ],
          name: "postInteraction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "extension",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "taker",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "makingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "takingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "remainingMakingAmount",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "extraData",
              type: "bytes",
            },
          ],
          name: "preInteraction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "extension",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "extraData",
              type: "bytes",
            },
          ],
          name: "takerInteraction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        ESCROW_DST_IMPLEMENTATION: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        ESCROW_SRC_IMPLEMENTATION: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        FEE_BANK: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        addressOfEscrowDst: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        addressOfEscrowSrc: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        availableCredit: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        createDstEscrow: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        decreaseAvailableCredit: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        getMakingAmount: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        getTakingAmount: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        increaseAvailableCredit: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        lastValidated: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        postInteraction: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        preInteraction: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        takerInteraction: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
      },
      deployedOnBlock: 23058845,
    },
    LimitOrderProtocol: {
      address: "0x716D5141f8F31063347149a693c4D61756a2d343",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IWETH",
              name: "_weth",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "AdvanceEpochFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "ArbitraryStaticCallFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "BadSignature",
          type: "error",
        },
        {
          inputs: [],
          name: "BitInvalidatedOrder",
          type: "error",
        },
        {
          inputs: [],
          name: "ETHTransferFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "EnforcedPause",
          type: "error",
        },
        {
          inputs: [],
          name: "EpochManagerAndBitInvalidatorsAreIncompatible",
          type: "error",
        },
        {
          inputs: [],
          name: "EthDepositRejected",
          type: "error",
        },
        {
          inputs: [],
          name: "ExpectedPause",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidMsgValue",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidPermit2Transfer",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidShortString",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidatedOrder",
          type: "error",
        },
        {
          inputs: [],
          name: "MakingAmountTooLow",
          type: "error",
        },
        {
          inputs: [],
          name: "MismatchArraysLengths",
          type: "error",
        },
        {
          inputs: [],
          name: "OrderExpired",
          type: "error",
        },
        {
          inputs: [],
          name: "OrderIsNotSuitableForMassInvalidation",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "PartialFillNotAllowed",
          type: "error",
        },
        {
          inputs: [],
          name: "Permit2TransferAmountTooHigh",
          type: "error",
        },
        {
          inputs: [],
          name: "PredicateIsNotTrue",
          type: "error",
        },
        {
          inputs: [],
          name: "PrivateOrder",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyDetected",
          type: "error",
        },
        {
          inputs: [],
          name: "RemainingInvalidatedOrder",
          type: "error",
        },
        {
          inputs: [],
          name: "SafeTransferFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "SafeTransferFromFailed",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
            {
              internalType: "bytes",
              name: "res",
              type: "bytes",
            },
          ],
          name: "SimulationResults",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "str",
              type: "string",
            },
          ],
          name: "StringTooLong",
          type: "error",
        },
        {
          inputs: [],
          name: "SwapWithZeroAmount",
          type: "error",
        },
        {
          inputs: [],
          name: "TakingAmountExceeded",
          type: "error",
        },
        {
          inputs: [],
          name: "TakingAmountTooHigh",
          type: "error",
        },
        {
          inputs: [],
          name: "TransferFromMakerToTakerFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "TransferFromTakerToMakerFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "WrongSeriesNonce",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "slotIndex",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "slotValue",
              type: "uint256",
            },
          ],
          name: "BitInvalidatorUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "EIP712DomainChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "series",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newEpoch",
              type: "uint256",
            },
          ],
          name: "EpochIncreased",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
          ],
          name: "OrderCancelled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "remainingAmount",
              type: "uint256",
            },
          ],
          name: "OrderFilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Paused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Unpaused",
          type: "event",
        },
        {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint96",
              name: "series",
              type: "uint96",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "advanceEpoch",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "offsets",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "and",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "arbitraryStaticCall",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "slot",
              type: "uint256",
            },
          ],
          name: "bitInvalidatorForOrder",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "MakerTraits",
              name: "makerTraits",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "additionalMask",
              type: "uint256",
            },
          ],
          name: "bitsInvalidateForOrder",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "MakerTraits",
              name: "makerTraits",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
          ],
          name: "cancelOrder",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "MakerTraits[]",
              name: "makerTraits",
              type: "uint256[]",
            },
            {
              internalType: "bytes32[]",
              name: "orderHashes",
              type: "bytes32[]",
            },
          ],
          name: "cancelOrders",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "predicate",
              type: "bytes",
            },
          ],
          name: "checkPredicate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              internalType: "uint96",
              name: "series",
              type: "uint96",
            },
          ],
          name: "epoch",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "series",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "makerEpoch",
              type: "uint256",
            },
          ],
          name: "epochEquals",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "eq",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "TakerTraits",
              name: "takerTraits",
              type: "uint256",
            },
          ],
          name: "fillContractOrder",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "TakerTraits",
              name: "takerTraits",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "args",
              type: "bytes",
            },
          ],
          name: "fillContractOrderArgs",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "vs",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "TakerTraits",
              name: "takerTraits",
              type: "uint256",
            },
          ],
          name: "fillOrder",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "vs",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "TakerTraits",
              name: "takerTraits",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "args",
              type: "bytes",
            },
          ],
          name: "fillOrderArgs",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "gt",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
          ],
          name: "hashOrder",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint96",
              name: "series",
              type: "uint96",
            },
          ],
          name: "increaseEpoch",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "lt",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "not",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "offsets",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "or",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "paused",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "permit",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "action",
              type: "bytes",
            },
          ],
          name: "permitAndCall",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
          ],
          name: "rawRemainingInvalidatorForOrder",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
          ],
          name: "remainingInvalidatorForOrder",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "simulate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "unpause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        paused: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        advanceEpoch: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        and: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        arbitraryStaticCall: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        bitInvalidatorForOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        bitsInvalidateForOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        cancelOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        cancelOrders: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        checkPredicate: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        eip712Domain: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        epoch: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        epochEquals: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        eq: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        fillContractOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        fillContractOrderArgs: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        fillOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        fillOrderArgs: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        gt: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        hashOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        increaseEpoch: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        lt: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        not: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        or: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        permitAndCall: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        rawRemainingInvalidatorForOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        remainingInvalidatorForOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        simulate: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
      },
      deployedOnBlock: 23058843,
    },
    WETH9: {
      address: "0x0656702924992528cD905B0b13Ec59C0410FF8e3",
      abi: [
        {
          constant: true,
          inputs: [],
          name: "name",
          outputs: [
            {
              name: "",
              type: "string",
            },
          ],
          payable: false,
          stateMutability: "view",
          type: "function",
        },
        {
          constant: false,
          inputs: [
            {
              name: "guy",
              type: "address",
            },
            {
              name: "wad",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              name: "",
              type: "bool",
            },
          ],
          payable: false,
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          constant: true,
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              name: "",
              type: "uint256",
            },
          ],
          payable: false,
          stateMutability: "view",
          type: "function",
        },
        {
          constant: false,
          inputs: [
            {
              name: "src",
              type: "address",
            },
            {
              name: "dst",
              type: "address",
            },
            {
              name: "wad",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              name: "",
              type: "bool",
            },
          ],
          payable: false,
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          constant: false,
          inputs: [
            {
              name: "wad",
              type: "uint256",
            },
          ],
          name: "withdraw",
          outputs: [],
          payable: false,
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          constant: true,
          inputs: [],
          name: "decimals",
          outputs: [
            {
              name: "",
              type: "uint8",
            },
          ],
          payable: false,
          stateMutability: "view",
          type: "function",
        },
        {
          constant: true,
          inputs: [
            {
              name: "",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              name: "",
              type: "uint256",
            },
          ],
          payable: false,
          stateMutability: "view",
          type: "function",
        },
        {
          constant: true,
          inputs: [],
          name: "symbol",
          outputs: [
            {
              name: "",
              type: "string",
            },
          ],
          payable: false,
          stateMutability: "view",
          type: "function",
        },
        {
          constant: false,
          inputs: [
            {
              name: "dst",
              type: "address",
            },
            {
              name: "wad",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              name: "",
              type: "bool",
            },
          ],
          payable: false,
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          constant: false,
          inputs: [],
          name: "deposit",
          outputs: [],
          payable: true,
          stateMutability: "payable",
          type: "function",
        },
        {
          constant: true,
          inputs: [
            {
              name: "",
              type: "address",
            },
            {
              name: "",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              name: "",
              type: "uint256",
            },
          ],
          payable: false,
          stateMutability: "view",
          type: "function",
        },
        {
          payable: true,
          stateMutability: "payable",
          type: "fallback",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              name: "src",
              type: "address",
            },
            {
              indexed: true,
              name: "guy",
              type: "address",
            },
            {
              indexed: false,
              name: "wad",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              name: "src",
              type: "address",
            },
            {
              indexed: true,
              name: "dst",
              type: "address",
            },
            {
              indexed: false,
              name: "wad",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              name: "dst",
              type: "address",
            },
            {
              indexed: false,
              name: "wad",
              type: "uint256",
            },
          ],
          name: "Deposit",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              name: "src",
              type: "address",
            },
            {
              indexed: false,
              name: "wad",
              type: "uint256",
            },
          ],
          name: "Withdrawal",
          type: "event",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 23058841,
    },
  },
  11155111: {
    EscrowFactory: {
      address: "0x9ad8aD2458dD3D1B440F0216C78c354e84F8C75c",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "limitOrderProtocol",
              type: "address",
            },
            {
              internalType: "contract IERC20",
              name: "feeToken",
              type: "address",
            },
            {
              internalType: "contract IERC20",
              name: "accessToken",
              type: "address",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "rescueDelaySrc",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "rescueDelayDst",
              type: "uint32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "AccessDenied",
          type: "error",
        },
        {
          inputs: [],
          name: "ERC1167FailedCreateClone",
          type: "error",
        },
        {
          inputs: [],
          name: "InsufficientEscrowBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidCreationTime",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidPartialFill",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidProof",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidSecretsAmount",
          type: "error",
        },
        {
          inputs: [],
          name: "MathOverflowedMulDiv",
          type: "error",
        },
        {
          inputs: [],
          name: "NotEnoughCredit",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyFeeBankAccess",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyLimitOrderProtocol",
          type: "error",
        },
        {
          inputs: [],
          name: "ResolverCanNotFillOrder",
          type: "error",
        },
        {
          inputs: [],
          name: "SafeTransferFromFailed",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "escrow",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "hashlock",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "Address",
              name: "taker",
              type: "uint256",
            },
          ],
          name: "DstEscrowCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "orderHash",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "hashlock",
                  type: "bytes32",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "taker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "token",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "safetyDeposit",
                  type: "uint256",
                },
                {
                  internalType: "Timelocks",
                  name: "timelocks",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct IBaseEscrow.Immutables",
              name: "srcImmutables",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "token",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "safetyDeposit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "chainId",
                  type: "uint256",
                },
              ],
              indexed: false,
              internalType: "struct IEscrowFactory.DstImmutablesComplement",
              name: "dstImmutablesComplement",
              type: "tuple",
            },
          ],
          name: "SrcEscrowCreated",
          type: "event",
        },
        {
          inputs: [],
          name: "ESCROW_DST_IMPLEMENTATION",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "ESCROW_SRC_IMPLEMENTATION",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FEE_BANK",
          outputs: [
            {
              internalType: "contract IFeeBank",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "orderHash",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "hashlock",
                  type: "bytes32",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "taker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "token",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "safetyDeposit",
                  type: "uint256",
                },
                {
                  internalType: "Timelocks",
                  name: "timelocks",
                  type: "uint256",
                },
              ],
              internalType: "struct IBaseEscrow.Immutables",
              name: "immutables",
              type: "tuple",
            },
          ],
          name: "addressOfEscrowDst",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "orderHash",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "hashlock",
                  type: "bytes32",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "taker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "token",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "safetyDeposit",
                  type: "uint256",
                },
                {
                  internalType: "Timelocks",
                  name: "timelocks",
                  type: "uint256",
                },
              ],
              internalType: "struct IBaseEscrow.Immutables",
              name: "immutables",
              type: "tuple",
            },
          ],
          name: "addressOfEscrowSrc",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "availableCredit",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "orderHash",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "hashlock",
                  type: "bytes32",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "taker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "token",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "amount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "safetyDeposit",
                  type: "uint256",
                },
                {
                  internalType: "Timelocks",
                  name: "timelocks",
                  type: "uint256",
                },
              ],
              internalType: "struct IBaseEscrow.Immutables",
              name: "dstImmutables",
              type: "tuple",
            },
            {
              internalType: "uint256",
              name: "srcCancellationTimestamp",
              type: "uint256",
            },
          ],
          name: "createDstEscrow",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "decreaseAvailableCredit",
          outputs: [
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "takingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "extraData",
              type: "bytes",
            },
          ],
          name: "getMakingAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "makingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "extraData",
              type: "bytes",
            },
          ],
          name: "getTakingAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "increaseAvailableCredit",
          outputs: [
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "key",
              type: "bytes32",
            },
          ],
          name: "lastValidated",
          outputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "leaf",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "extension",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "taker",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "makingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "takingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "remainingMakingAmount",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "extraData",
              type: "bytes",
            },
          ],
          name: "postInteraction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "extension",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "taker",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "makingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "takingAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "remainingMakingAmount",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "extraData",
              type: "bytes",
            },
          ],
          name: "preInteraction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "extension",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "extraData",
              type: "bytes",
            },
          ],
          name: "takerInteraction",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        ESCROW_DST_IMPLEMENTATION: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        ESCROW_SRC_IMPLEMENTATION: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        FEE_BANK: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        addressOfEscrowDst: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        addressOfEscrowSrc: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        availableCredit: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        createDstEscrow: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        decreaseAvailableCredit: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        getMakingAmount: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        getTakingAmount: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        increaseAvailableCredit: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        lastValidated: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        postInteraction: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        preInteraction: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
        takerInteraction: "contracts/1inch/cross-chain-swap/BaseEscrowFactory.sol",
      },
      deployedOnBlock: 8855030,
    },
    LimitOrderProtocol: {
      address: "0x0b9aD27E24A17e9cFE5eDD2455238612189F0A48",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IWETH",
              name: "_weth",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "AdvanceEpochFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "ArbitraryStaticCallFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "BadSignature",
          type: "error",
        },
        {
          inputs: [],
          name: "BitInvalidatedOrder",
          type: "error",
        },
        {
          inputs: [],
          name: "ETHTransferFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "EnforcedPause",
          type: "error",
        },
        {
          inputs: [],
          name: "EpochManagerAndBitInvalidatorsAreIncompatible",
          type: "error",
        },
        {
          inputs: [],
          name: "EthDepositRejected",
          type: "error",
        },
        {
          inputs: [],
          name: "ExpectedPause",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidMsgValue",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidPermit2Transfer",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidShortString",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidatedOrder",
          type: "error",
        },
        {
          inputs: [],
          name: "MakingAmountTooLow",
          type: "error",
        },
        {
          inputs: [],
          name: "MismatchArraysLengths",
          type: "error",
        },
        {
          inputs: [],
          name: "OrderExpired",
          type: "error",
        },
        {
          inputs: [],
          name: "OrderIsNotSuitableForMassInvalidation",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "PartialFillNotAllowed",
          type: "error",
        },
        {
          inputs: [],
          name: "Permit2TransferAmountTooHigh",
          type: "error",
        },
        {
          inputs: [],
          name: "PredicateIsNotTrue",
          type: "error",
        },
        {
          inputs: [],
          name: "PrivateOrder",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyDetected",
          type: "error",
        },
        {
          inputs: [],
          name: "RemainingInvalidatedOrder",
          type: "error",
        },
        {
          inputs: [],
          name: "SafeTransferFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "SafeTransferFromFailed",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
            {
              internalType: "bytes",
              name: "res",
              type: "bytes",
            },
          ],
          name: "SimulationResults",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "str",
              type: "string",
            },
          ],
          name: "StringTooLong",
          type: "error",
        },
        {
          inputs: [],
          name: "SwapWithZeroAmount",
          type: "error",
        },
        {
          inputs: [],
          name: "TakingAmountExceeded",
          type: "error",
        },
        {
          inputs: [],
          name: "TakingAmountTooHigh",
          type: "error",
        },
        {
          inputs: [],
          name: "TransferFromMakerToTakerFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "TransferFromTakerToMakerFailed",
          type: "error",
        },
        {
          inputs: [],
          name: "WrongSeriesNonce",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "slotIndex",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "slotValue",
              type: "uint256",
            },
          ],
          name: "BitInvalidatorUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "EIP712DomainChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "series",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newEpoch",
              type: "uint256",
            },
          ],
          name: "EpochIncreased",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
          ],
          name: "OrderCancelled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "remainingAmount",
              type: "uint256",
            },
          ],
          name: "OrderFilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Paused",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "Unpaused",
          type: "event",
        },
        {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint96",
              name: "series",
              type: "uint96",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "advanceEpoch",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "offsets",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "and",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "arbitraryStaticCall",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "slot",
              type: "uint256",
            },
          ],
          name: "bitInvalidatorForOrder",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "MakerTraits",
              name: "makerTraits",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "additionalMask",
              type: "uint256",
            },
          ],
          name: "bitsInvalidateForOrder",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "MakerTraits",
              name: "makerTraits",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
          ],
          name: "cancelOrder",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "MakerTraits[]",
              name: "makerTraits",
              type: "uint256[]",
            },
            {
              internalType: "bytes32[]",
              name: "orderHashes",
              type: "bytes32[]",
            },
          ],
          name: "cancelOrders",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "predicate",
              type: "bytes",
            },
          ],
          name: "checkPredicate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              internalType: "uint96",
              name: "series",
              type: "uint96",
            },
          ],
          name: "epoch",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "series",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "makerEpoch",
              type: "uint256",
            },
          ],
          name: "epochEquals",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "eq",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "TakerTraits",
              name: "takerTraits",
              type: "uint256",
            },
          ],
          name: "fillContractOrder",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "signature",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "TakerTraits",
              name: "takerTraits",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "args",
              type: "bytes",
            },
          ],
          name: "fillContractOrderArgs",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "vs",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "TakerTraits",
              name: "takerTraits",
              type: "uint256",
            },
          ],
          name: "fillOrder",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "vs",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "TakerTraits",
              name: "takerTraits",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "args",
              type: "bytes",
            },
          ],
          name: "fillOrderArgs",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "gt",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "salt",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "maker",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "receiver",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "makerAsset",
                  type: "uint256",
                },
                {
                  internalType: "Address",
                  name: "takerAsset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "makingAmount",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "takingAmount",
                  type: "uint256",
                },
                {
                  internalType: "MakerTraits",
                  name: "makerTraits",
                  type: "uint256",
                },
              ],
              internalType: "struct IOrderMixin.Order",
              name: "order",
              type: "tuple",
            },
          ],
          name: "hashOrder",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint96",
              name: "series",
              type: "uint96",
            },
          ],
          name: "increaseEpoch",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "lt",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "not",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "offsets",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "or",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "paused",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "permit",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "action",
              type: "bytes",
            },
          ],
          name: "permitAndCall",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
          ],
          name: "rawRemainingInvalidatorForOrder",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "maker",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "orderHash",
              type: "bytes32",
            },
          ],
          name: "remainingInvalidatorForOrder",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "simulate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "unpause",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        paused: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        advanceEpoch: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        and: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        arbitraryStaticCall: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        bitInvalidatorForOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        bitsInvalidateForOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        cancelOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        cancelOrders: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        checkPredicate: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        eip712Domain: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        epoch: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        epochEquals: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        eq: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        fillContractOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        fillContractOrderArgs: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        fillOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        fillOrderArgs: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        gt: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        hashOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        increaseEpoch: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        lt: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        not: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        or: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        permitAndCall: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        rawRemainingInvalidatorForOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        remainingInvalidatorForOrder: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
        simulate: "contracts/1inch/limit-order-protocol/OrderMixin.sol",
      },
      deployedOnBlock: 8854734,
    },
    WETH9: {
      address: "0x9d42A3E42eb5CC7D47DeE5f74E15f48f31A9a691",
      abi: [
        {
          constant: true,
          inputs: [],
          name: "name",
          outputs: [
            {
              name: "",
              type: "string",
            },
          ],
          payable: false,
          stateMutability: "view",
          type: "function",
        },
        {
          constant: false,
          inputs: [
            {
              name: "guy",
              type: "address",
            },
            {
              name: "wad",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              name: "",
              type: "bool",
            },
          ],
          payable: false,
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          constant: true,
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              name: "",
              type: "uint256",
            },
          ],
          payable: false,
          stateMutability: "view",
          type: "function",
        },
        {
          constant: false,
          inputs: [
            {
              name: "src",
              type: "address",
            },
            {
              name: "dst",
              type: "address",
            },
            {
              name: "wad",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              name: "",
              type: "bool",
            },
          ],
          payable: false,
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          constant: false,
          inputs: [
            {
              name: "wad",
              type: "uint256",
            },
          ],
          name: "withdraw",
          outputs: [],
          payable: false,
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          constant: true,
          inputs: [],
          name: "decimals",
          outputs: [
            {
              name: "",
              type: "uint8",
            },
          ],
          payable: false,
          stateMutability: "view",
          type: "function",
        },
        {
          constant: true,
          inputs: [
            {
              name: "",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              name: "",
              type: "uint256",
            },
          ],
          payable: false,
          stateMutability: "view",
          type: "function",
        },
        {
          constant: true,
          inputs: [],
          name: "symbol",
          outputs: [
            {
              name: "",
              type: "string",
            },
          ],
          payable: false,
          stateMutability: "view",
          type: "function",
        },
        {
          constant: false,
          inputs: [
            {
              name: "dst",
              type: "address",
            },
            {
              name: "wad",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              name: "",
              type: "bool",
            },
          ],
          payable: false,
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          constant: false,
          inputs: [],
          name: "deposit",
          outputs: [],
          payable: true,
          stateMutability: "payable",
          type: "function",
        },
        {
          constant: true,
          inputs: [
            {
              name: "",
              type: "address",
            },
            {
              name: "",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              name: "",
              type: "uint256",
            },
          ],
          payable: false,
          stateMutability: "view",
          type: "function",
        },
        {
          payable: true,
          stateMutability: "payable",
          type: "fallback",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              name: "src",
              type: "address",
            },
            {
              indexed: true,
              name: "guy",
              type: "address",
            },
            {
              indexed: false,
              name: "wad",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              name: "src",
              type: "address",
            },
            {
              indexed: true,
              name: "dst",
              type: "address",
            },
            {
              indexed: false,
              name: "wad",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              name: "dst",
              type: "address",
            },
            {
              indexed: false,
              name: "wad",
              type: "uint256",
            },
          ],
          name: "Deposit",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              name: "src",
              type: "address",
            },
            {
              indexed: false,
              name: "wad",
              type: "uint256",
            },
          ],
          name: "Withdrawal",
          type: "event",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 8854621,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
